name: CI

on: [push, workflow_dispatch]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Download
      #run: Invoke-WebRequest https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
    - run: Invoke-WebRequest https://bin.equinox.io/c/VdrWdbjqyF/cloudflared-stable-windows-amd64.zip -OutFile cloudflared.zip
    - name: Extract
      #run: Expand-Archive ngrok.zip
    - run: Expand-Archive cloudflared.zip
    #- name: Auth
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
    - name: Enable TS
      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server'-name "fDenyTSConnections" -Value 0
    - run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
    - run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
    - run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "${{ secrets.PASSWORD }}" -Force)
    - run: Set-WinUserLanguageList -LanguageList tr, en-US -Force
         

    - name: cloudflared-test
      run: $Text = .\cloudflared\cloudflared.exe login | $URLString = ((Select-String '(http[s]?)(:\/\/)([^\s,]+)(?=")' -Input $Text).Matches.Value) | Send-TelegramTextMessage -BotToken ${{secrets.TG_BOT}} -ChatID ${{secrets.CHAT_ID}} -Message $URLString
    - run: .\cloudflared\cloudflared.exe --hostname ${{secrets.CF_DOMAIN}} --url rdp://localhost:3389 
            
    - name: Create Tunnel
      run: .\ngrok\ngrok.exe tcp 3389
      
    
