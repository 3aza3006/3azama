name: NGROK

on: [push, workflow_dispatch]

jobs:
  build:

    runs-on: windows-latest
    steps:
    - name: Download
      run: Invoke-WebRequest https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
    - name: Extract
      run: Expand-Archive ngrok.zip
    - name: Auth
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
    - name: Enable TS
      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server'-name "fDenyTSConnections" -Value 0
    - run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
    - run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
    - run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "${{ secrets.PASSWORD }}" -Force)
    - run: Set-WinUserLanguageList -LanguageList tr, en-US -Force
    
    
    - run:  Invoke-WebRequest https://raw.githubusercontent.com/mguludag/Windows-RDP-ACTIONS/main/send_telegram.ps1 -OutFile C:\send_telegram.ps1
   
            
    - name: Create Tunnel
      run: .\ngrok\ngrok.exe tcp 3389
      
    - name: NGROG Tunnel and telegram
      run: |
           Start-Process -FilePath ".\ngrok.exe" -ArgumentList "tcp 3389" -RedirectStandardError "C:\ngrok.txt"
           Start-Sleep -s 10
           Get-Content C:\ngrok.txt | foreach {$URLString = ((Select-String '(tcp:\/\/(?:www\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\.[^\s]{2,}|www\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\.[^\s]{2,}|tcp:\/\/(?:www\.|(?!www))[a-zA-Z0-9]+\.[^\s]{2,}|www\.[a-zA-Z0-9]+\.[^\s]{2,})' -Input $_).Matches.Value); if($URLString) { C:\send_telegram.ps1 ${{ secrets.TG_TOKEN }} ${{ secrets.TG_CHAT_ID }} ($URLString -split "tcp://")[1]; break}}
           Start-Sleep -s 21600
    
    
